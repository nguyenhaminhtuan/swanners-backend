availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/$_DATABASE_URL_ENV_NAME/versions/lastest
      env: 'DATABASE_URL'

steps:
  - id: Install dependencies
    name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    env:
      - 'DATABASE_URL=$$DATABASE_URL'
    secretEnv: ['DATABASE_URL']

  - id: Build image
    name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'gcr.io/$PROJECT_ID/swanners-backend:$SHORT_SHA',
        '-t',
        'gcr.io/$PROJECT_ID/swanners-backend:lastest',
        '.',
      ]

  - id: Install Cloud SQL proxy
    name: alpine:3.10
    entrypoint: sh
    args:
      - -c
      - 'wget -O /workspace/cloud_sql_proxy https://storage.googleapis.com/cloudsql-proxy/v1.16/cloud_sql_proxy.linux.386 &&  chmod +x /workspace/cloud_sql_proxy'

  - id: Migration
    name: 'gcr.io/cloud-builders/npm'
    entrypoint: sh
    args:
      [
        '-c',
        '(/workspace/cloud_sql_proxy -dir=/cloudsql -instances=$_CLOUD_SQL_INSTANCE & sleep 2) && npm run migration',
      ]

  - id: Push image
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/swanners-backend:lastest']

  - id: Deploy cloud run
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'run',
        'deploy',
        'swanners-backend',
        '--image',
        'gcr.io/$PROJECT_ID/swanners-backend:lastest',
        '--region',
        'asia-southeast1',
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--add-cloudsql-instances',
        '$_CLOUD_SQL_INSTANCE',
        '--set-env-vars',
        'DATABASE_URL=$$DATABASE_URL',
      ]
    secretEnv: ['DATABASE_URL']

images: ['gcr.io/$PROJECT_ID/swanners-backend:lastest']
